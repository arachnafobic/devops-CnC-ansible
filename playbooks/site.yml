---

# take inventory
# always include this when using tags!
- name:             Gather facts and create dynamic groups before we start
  hosts:            all
  become:           true
  become_user:      root
  gather_facts:     true
  tags:             gather
  tasks:
     - group_by:     key={{ ansible_distribution }}
       changed_when: false
     - group_by:     key={{ ansible_distribution }}_{{ ansible_distribution_release }}
       changed_when: false
     - group_by:     key=vm
       when:         ansible_virtualization_role == "guest" and ansible_virtualization_type == "virtualbox"
       changed_when: false
     - set_fact:     default_servername={{ ansible_hostname }}.{{ default_domain }}
       changed_when: false

# go time
- name:             Running Plays now
  hosts:            all
  become:           true
  become_user:      root
  gather_facts:     false

# base
- import_playbook: ../roles/common.yml
  tags: [common, init]
  vars:
    targets: all

- import_playbook: ../roles/etckeeper.yml
  tags: [etckeeper, init]
  vars:
    targets: all

- import_playbook: ../roles/update.yml
  tags: [update, init]
  vars:
    targets: all

- import_playbook: ../roles/ntp.yml
  tags: [ntp, init]
  vars:
    targets: all

- import_playbook: ../roles/fail2ban.yml
  tags: [fail2ban, init]
  vars:
    targets: all

- import_playbook: ../roles/netdata.yml
  tags: [netdata, init]
  vars:
    targets: all

- import_playbook: ../roles/repos.yml
  tags: [repos, init]
  vars:
    targets: all

- import_playbook: ../roles/srvbak.yml
  tags: [srvbak, init]
  vars:
    targets: all

- import_playbook: ../roles/autossh.yml
  tags: [autossh, init]
  vars:
    targets: all

# dev
- import_playbook: ../roles/ruby.yml
  tags: [ruby, dev]
  vars:
    targets: ruby

- import_playbook: ../roles/python.yml
  tags: [python, dev]
  vars:
    targets: python

- import_playbook: ../roles/dotnet.yml
  tags: [dotnet, dev]
  vars:
    targets: dotnet

- import_playbook: ../roles/nodejs.yml
  tags: [nodejs, dev]
  vars:
    targets: nodejs

- import_playbook: ../roles/erlang.yml
  tags: [erlang, dev]
  vars:
    targets: erlang

- import_playbook: ../roles/libav.yml
  tags: [libav, dev]
  vars:
    targets: libraries

- import_playbook: ../roles/imagemagick.yml
  tags: [imagemagick, dev]
  vars:
    targets: libraries

# services
- import_playbook: ../roles/nullmailer.yml
  tags: [nullmailer, services]
  vars:
    targets: nullmailer

- import_playbook: ../roles/proftpd.yml
  tags: [proftpd, services]
  vars:
    targets: proftpd

- import_playbook: ../roles/redis.yml
  tags: [redis, services]
  vars:
    targets: redis

- import_playbook: ../roles/redislink.yml
  tags: [redis, redislink, services]
  vars:
    targets: redis

- import_playbook: ../roles/memcached.yml
  tags: [memcached, services]
  vars:
    targets: memcached

- import_playbook: ../roles/rabbitmq.yml
  tags: [rabbitmq, services]
  vars:
    targets: rabbitmq

- import_playbook: ../roles/nginx.yml
  tags: [nginx, services]
  vars:
    targets: nginx

- import_playbook: ../roles/mariadb.yml
  tags: [mariadb, services]
  vars:
    targets: mariadb

- import_playbook: ../roles/php-fpm.yml
  tags: [php-fpm, services]
  vars:
    targets: phpfpm

- import_playbook: ../roles/phpmyadmin.yml
  tags: [phpmyadmin, services]
  vars:
    targets: phpmyadmin

# monitoring/logging systems and clients
- import_playbook: ../roles/sensu.yml
  tags: [sensu, services]
  vars:
    targets: all

- import_playbook: ../roles/graphite.yml
  tags: [graphite, services]
  vars:
    targets: monitor

- import_playbook: ../roles/elasticsearch.yml
  tags: [elasticsearch, services]
  vars:
    targets: monitor

- import_playbook: ../roles/kibana.yml
  tags: [kibana, services]
  vars:
    targets: monitor

- import_playbook: ../roles/logstash.yml
  tags: [logstash, services]
  vars:
    targets: monitor

- import_playbook: ../roles/beats.yml
  tags: [beats, services]
  vars:
    targets: all

# hosting dashboard
- import_playbook: ../roles/froxlor.yml
  tags: [froxlor, hosting]
  vars:
    targets: hosting

- import_playbook: ../roles/froxlor-users.yml
  tags: [froxlor, froxlor-users, hosting]
  vars:
    targets: hosting

- import_playbook: ../roles/froxlor-wp.yml
  tags: [froxlor, froxlor-wp, hosting]
  vars:
    targets: hosting

# general user setup
- import_playbook: ../roles/setup-user.yml
  tags: [users, user-root]
  vars:
    targets:  all
    user:   root
    home:   /root
    keygen: false

- import_playbook: ../roles/setup-user.yml
  tags: [users, user-vagrant]
  vars:
    targets:  vm
    user:   vagrant
    home:   /home/vagrant
    keygen: false

# distro specific user setup
- import_playbook: ../roles/setup-user.yml
  tags: [users, user-ubuntu]
  vars:
    targets:  Ubuntu
    user:   ubuntu
    home:   /home/ubuntu
    keygen: false

- import_playbook: ../roles/setup-user.yml
  tags: [users, user-centos]
  vars:
    targets:  CentOS
    user:   centos
    home:   /home/centos
    keygen: false
