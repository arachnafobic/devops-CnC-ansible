---

- name:             install | Clone netdata to /usr/local/src
  git:              repo="https://github.com/firehol/netdata"
                    dest="/usr/local/src/netdata"
                    depth=1
  register:         netdata_clone

- name:             install | Run netdata installer
  shell:            ./netdata-installer.sh --dont-wait 1>~/tmp/netdata-installer.log
                    chdir=/usr/local/src/netdata
                    creates=/usr/sbin/netdata
  register:         netdata_install
  notify:
    - restart netdata

- name:             update | Run netdata updater
  shell:            ./netdata-updater.sh 1>~/tmp/netdata-updater.log
                    chdir=/usr/local/src/netdata
  register:         netdata_update
  when:
    - netdata_clone is changed
    - netdata_install is not changed
  notify:
    - restart netdata

- name:             config | Configuring Netdata to only listen/reply to localhost
  replace:          dest=/etc/netdata/netdata.conf
                    regexp="#\s{{ item.key }}(.*)$"
                    replace="{{ item.key }} {{ item.value }}"
  when:             localhost_only == true
  with_items:
    - { key: 'bind to =', value: '127.0.0.1' }
    - { key: 'allow connections from =', value: 'localhost 127.0.0.1' }
    - { key: 'allow dashboard from =', value: 'localhost 127.0.0.1' }
    - { key: 'allow badges from =', value: 'localhost 127.0.0.1' }
    - { key: 'allow streaming from =', value: 'localhost 127.0.0.1' }
  notify:
    - restart netdata

- name:             config | Configuring Netdata not to send emails
  lineinfile:       path=/etc/netdata/netdata.conf
                    insertafter="^{{ item.key }}"
                    line="{{ item.value }}"
  when:             health_enabled == false
  with_items:
    - { key: '\[health\]', value: '	enabled = no' }
  notify:
    - restart netdata

- name:             config | Setup auto-update cronjob
  file:             path=/etc/cron.daily/netdata-updater
                    src=/usr/local/src/netdata/netdata-updater.sh
                    state=link
